{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/isamshabandri/Desktop/upkeep/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/isamshabandri/Desktop/upkeep/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    width:100%;\\n    height:100%;\\n    padding:10px;\\n    margin:auto;\\n    background-image: url(\", \");\\n\\n    .App {\\n      text-align: center;\\n    }\\n    \\n    .App-logo {\\n      // animation: App-logo-spin infinite 20s linear;\\n      width:200px;\\n      pointer-events: none;\\n    }\\n    \\n    .App-header {\\n      width: 400px;\\n      margin: auto;\\n      background-color: white;\\n      text-align: center;\\n      box-shadow: 0px 0px 10px black;\\n      padding: 30px;\\n      margin-top: 40px;\\n      \\n      button {\\n        display: block;\\n        margin: auto;\\n        padding: 10px 25px;\\n        /* height: 30px; */\\n        font-size: 16px;\\n        /* width: 200px; */\\n        margin-top: 20px;\\n        background-color: orange;\\n      }\\n    }\\n    \\n    .App-link {\\n      color: #61dafb;\\n    }\\n    \\n    @keyframes App-logo-spin {\\n      from {\\n        transform: rotate(0deg);\\n      }\\n      to {\\n        transform: rotate(360deg);\\n      }\\n    }\\n\\n    input {\\n      height: 30px;\\n      margin: 5px;\\n      width: 250px;\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport logo from './upkeep-logo.png';\nimport backgroundImg from './maintenance.jpg';\nimport styled from 'styled-components';\nimport OrderForm from './OrderForm';\nconst LoginWrapper = styled.div(_templateObject(), backgroundImg);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      if (event.keyCode === 13) {\n        this.handleLogin();\n      }\n    };\n\n    this.handleLogin = () => {\n      this.postData('https://api.onupkeep.com/api/v2/auth/', {\n        email: this.state.email,\n        password: this.state.password\n      }).then(data => {\n        localStorage.setItem(\"sessionToken\", data.result.sessionToken);\n        this.setState({\n          loggedIn: true\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      loggedIn: false,\n      title: '',\n      description: '',\n      priority: 0,\n      dueDate: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleInputChange(e) {\n    const name = e.target.name;\n\n    if (name !== \"dueDate\") {\n      this.setState({\n        [name]: e.target.value\n      });\n    } else {\n      this.setState({\n        [name]: new Date(e.target.value).getTime()\n      });\n    }\n  }\n\n  deleteData(url = '', data = {}, token = '') {\n    // Default options are marked with *\n    return fetch(url, {\n      method: 'DELETE',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Session-Token': token\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer'\n    }).then(response => {\n      localStorage.removeItem(\"sessionToken\");\n    });\n  }\n\n  getData(url = '', data = {}, token = '') {\n    // Default options are marked with *\n    return fetch(url, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Session-Token': token\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer'\n    }).then(response => response.json());\n  }\n\n  postData(url = '', data = {}, token = '') {\n    // Default options are marked with *\n    return fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Session-Token': token\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(data)\n    }).then(response => response.json());\n  }\n\n  render() {\n    if (!this.state.loggedIn) {\n      return React.createElement(LoginWrapper, {\n        onLoad: this.attemptLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Enter Email Address\",\n        onChange: event => this.handleInputChange(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Enter Password\",\n        onChange: event => this.handleInputChange(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Login\")));\n    } else {\n      return React.createElement(OrderForm, {\n        deleteData: this.deleteData,\n        postData: this.postData,\n        getData: this.getData,\n        handleInputChange: this.handleInputChange,\n        title: this.state.title,\n        description: this.state.description,\n        priority: this.state.priority,\n        dueDate: this.state.dueDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/isamshabandri/Desktop/upkeep/src/App.js"],"names":["React","logo","backgroundImg","styled","OrderForm","LoginWrapper","div","App","Component","constructor","props","handleKeyPress","event","keyCode","handleLogin","postData","email","state","password","then","data","localStorage","setItem","result","sessionToken","setState","loggedIn","catch","error","console","title","description","priority","dueDate","handleInputChange","bind","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","name","target","value","Date","getTime","deleteData","url","token","fetch","method","mode","cache","credentials","headers","redirect","referrer","response","removeItem","getData","json","body","JSON","stringify","render","attemptLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './upkeep-logo.png';\nimport backgroundImg from './maintenance.jpg';\nimport styled from 'styled-components';\nimport OrderForm from './OrderForm';\n\n\n\nconst LoginWrapper = styled.div`\n    width:100%;\n    height:100%;\n    padding:10px;\n    margin:auto;\n    background-image: url(${backgroundImg});\n\n    .App {\n      text-align: center;\n    }\n    \n    .App-logo {\n      // animation: App-logo-spin infinite 20s linear;\n      width:200px;\n      pointer-events: none;\n    }\n    \n    .App-header {\n      width: 400px;\n      margin: auto;\n      background-color: white;\n      text-align: center;\n      box-shadow: 0px 0px 10px black;\n      padding: 30px;\n      margin-top: 40px;\n      \n      button {\n        display: block;\n        margin: auto;\n        padding: 10px 25px;\n        /* height: 30px; */\n        font-size: 16px;\n        /* width: 200px; */\n        margin-top: 20px;\n        background-color: orange;\n      }\n    }\n    \n    .App-link {\n      color: #61dafb;\n    }\n    \n    @keyframes App-logo-spin {\n      from {\n        transform: rotate(0deg);\n      }\n      to {\n        transform: rotate(360deg);\n      }\n    }\n\n    input {\n      height: 30px;\n      margin: 5px;\n      width: 250px;\n    }\n`;\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n  this.state = {\n      email:'',\n      password: '',\n      loggedIn: false,\n      title: '',\n      description: '',\n      priority: 0,\n      dueDate:''\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleInputChange (e) { \n    const name = e.target.name;\n\n      if(name !== \"dueDate\"){\n          this.setState({\n            [name]: e.target.value\n          });\n      }\n      else{\n        this.setState({\n          [name]: new Date(e.target.value).getTime()\n        });\n      }\n  }\n\n  deleteData(url = '', data = {},token = '') {\n    // Default options are marked with *\n      return fetch(url, {\n          method: 'DELETE', \n          mode: 'cors', \n          cache: 'no-cache', \n          credentials: 'same-origin',\n          headers: {\n              'Content-Type': 'application/json',\n              'Session-Token': token\n          },\n          redirect: 'follow', \n          referrer: 'no-referrer',\n      })\n      .then(response => {\n        localStorage.removeItem(\"sessionToken\");\n      });\n    }\n\n  getData(url = '', data = {},token = '') {\n    // Default options are marked with *\n      return fetch(url, {\n          method: 'GET', \n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin', \n          headers: {\n              'Content-Type': 'application/json',\n              'Session-Token': token\n          },\n          redirect: 'follow', \n          referrer: 'no-referrer', \n      })\n      .then(response => response.json());\n    }\n\n  postData(url = '', data = {},token = '') {\n    // Default options are marked with *\n      return fetch(url, {\n          method: 'POST',\n          mode: 'cors', \n          cache: 'no-cache', \n          credentials: 'same-origin',\n          headers: {\n              'Content-Type': 'application/json',\n              'Session-Token': token\n          },\n          redirect: 'follow', \n          referrer: 'no-referrer', \n          body: JSON.stringify(data), \n      })\n      .then(response => response.json());\n    }\n\n    handleKeyPress = (event) => {\n      if (event.keyCode === 13) {\n        this.handleLogin();\n      }\n    }\n\n  handleLogin=()=>{\n    this.postData('https://api.onupkeep.com/api/v2/auth/', {email: this.state.email, password:this.state.password})\n  .then(data =>{\n     localStorage.setItem(\"sessionToken\",data.result.sessionToken);\n     this.setState({\n       loggedIn : true\n     });\n  }) \n  .catch(error => {\n    console.error(error);\n  });\n\n  }\n\n\n\n  render(){\n\n    if(!this.state.loggedIn){\n        return (\n        <LoginWrapper onLoad={this.attemptLogin}>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <input type=\"text\" name=\"email\" placeholder=\"Enter Email Address\" onChange={(event)=>this.handleInputChange(event)}/>\n            <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" onChange={(event)=>this.handleInputChange(event)} />\n            <button onClick={this.handleLogin}>Login</button>\n          </header>\n        </LoginWrapper>\n      );\n    }\n    else {\n      return <OrderForm deleteData={this.deleteData} postData={this.postData} getData={this.getData} handleInputChange={this.handleInputChange} title={this.state.title} description={this.state.description} priority={this.state.priority} dueDate={this.state.dueDate} />;\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}